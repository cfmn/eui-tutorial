<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grid layout - Ebiten UI</title>
    <link>http://localhost:1313/eui/layouts/grid/index.html</link>
    <description>The grid layout puts all child containers in an even grid, wrapping each row based on the number of columns.&#xA;Full example 1package main 2 3import ( 4&#x9;&#34;image/color&#34; 5&#x9;&#34;github.com/ebitenui/ebitenui&#34; 6&#x9;&#34;github.com/ebitenui/ebitenui/image&#34; 7&#x9;&#34;github.com/ebitenui/ebitenui/widget&#34; 8&#x9;&#34;github.com/hajimehoshi/ebiten/v2&#34; 9&#x9;&#34;golang.org/x/image/colornames&#34; 10&#x9;&#34;golang.org/x/image/colornames&#34; 11) 12 13type Game struct { 14&#x9;ui *ebitenui.UI 15} 16 17func NewGame() *Game { 18&#x9;root := widget.NewContainer( 19&#x9;widget.ContainerOpts.BackgroundImage( 20&#x9;image.NewNineSliceColor(colornames.Gainsboro), 21&#x9;), 22&#x9;widget.ContainerOpts.Layout(widget.NewGridLayout( 23&#x9;widget.GridLayoutOpts.Columns(5), 24&#x9;widget.GridLayoutOpts.DefaultStretch(true, true), 25&#x9;widget.GridLayoutOpts.Padding(widget.NewInsetsSimple(25)), 26&#x9;widget.GridLayoutOpts.Spacing(5, 5), 27&#x9;)), 28&#x9;) 29&#x9;colors := []color.Color{ 30&#x9;colornames.Indianred, 31&#x9;colornames.Goldenrod, 32&#x9;colornames.Steelblue, 33&#x9;colornames.Mediumseagreen, 34&#x9;colornames.Darkslategray, 35&#x9;} 36&#x9;for y := 0; y &lt; 5; y++ { 37&#x9;for x := 0; x &lt; 5; x++ { 38&#x9;child := widget.NewContainer( 39&#x9;widget.ContainerOpts.BackgroundImage( 40&#x9;image.NewNineSliceColor(colors[(x+y)%len(colors)]), 41&#x9;), 42&#x9;widget.ContainerOpts.WidgetOpts( 43&#x9;widget.WidgetOpts.LayoutData(widget.GridLayoutData{}), 44&#x9;widget.WidgetOpts.MinSize(16, 16), 45&#x9;), 46&#x9;widget.ContainerOpts.Layout(widget.NewAnchorLayout()), 47&#x9;) 48&#x9;root.AddChild(child) 49&#x9;} 50&#x9;} 51 52&#x9;return &amp;Game{ 53&#x9;ui: &amp;ebitenui.UI{Container: root}, 54&#x9;} 55} 56 57func (g *Game) Update() error { 58&#x9;g.ui.Update() 59&#x9;return nil 60} 61 62func (g *Game) Draw(screen *ebiten.Image) { 63&#x9;g.ui.Draw(screen) 64} 65 66func (g *Game) Layout(w, h int) (int, int) { 67&#x9;return w, h 68} Layout options Columns Responsible for wrapping cells beyond a given number.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate></lastBuildDate>
    <atom:link href="http://localhost:1313/eui/layouts/grid/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>